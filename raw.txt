const express = require('express')
const bodyParser = require('body-parser');
const crypto = require('crypto');
const app = express()
const port = 3001

app.use(bodyParser.json());

const USERS = [];

const QUESTIONS = [{
title: "Two states",
description: "Given an array , return the maximum of the array?",
testCases: [{
input: "[1,2,3,4,5]",
output: "5"
}]
}];

const SUBMISSION = [

]

app.post('/signup', function(req, res) {
const { email, password } = req.body;

if (USERS.some(user => user.email === email)) {
res.status(400).send('User already exists');
return;
}

USERS.push({ email, password });
res.status(200).send('User signed up');
})

app.post('/login', function(req, res) {
const { email, password } = req.body;

const user = USERS.find(user => user.email === email);

if (!user) {
res.status(401).send('User not found');
return;
}

if (user.password === password) {
const token = crypto.randomBytes(32).toString('hex');
res.status(200).send({ token });
} else {
res.status(401).send('Invalid password');
}
})

app.get('/questions', function(req, res) {
res.status(200).send(QUESTIONS);
})

app.get("/submissions", function(req, res) {
res.status(200).send(SUBMISSION);
});

app.post("/submissions", function(req, res) {
const { userId, problemId, solution } = req.body;
const accepted = Math.random() > 0.5;

SUBMISSION.push({ userId, problemId, solution, accepted });
res.status(200).send({ accepted });
});

// leaving as hard todos
// Create a route that lets an admin add a new problem
// ensure that only admins can do that.

app.listen(port, function() {
console.log(Example app listening on port ${port})
})